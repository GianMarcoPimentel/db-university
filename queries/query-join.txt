1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.name, `students`.surname , degrees.name AS 'Corso'
FROM `students`
INNER JOIN `degrees`
ON students.degree_id = degrees.id
WHERE degrees.id = 53;
 

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze


SELECT degrees.* , departments.name
FROM `degrees`
INNER JOIN `departments`
ON degrees.department_id = departments.id
WHERE `level` = 'magistrale'
AND departments.id = 7;


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT courses.* , teachers.name AS ' Nome', teachers.surname AS 'Cognome'
FROM `courses`
INNER JOIN `course_teacher`
ON courses.id = course_teacher.course_id
INNER JOIN `teachers`
ON course_teacher.teacher_id = teachers.id
WHERE teachers.id = 44;


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT students.* , degrees.name AS 'Corso' , departments.name AS 'Dipartimento'
FROM `students`
INNER JOIN `degrees`
ON students.degree_id = degrees.id
INNER JOIN `departments`
ON degrees.department_id = departments.id
ORDER BY students.surname ASC , students.name ASC;


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.* ,courses.name AS 'Nome corso', teachers.name AS 'Nome Insegnante', teachers.surname AS 'Cognome Insegnante'
FROM `degrees`
INNER JOIN `courses`
ON degrees.id = courses.degree_id
INNER JOIN `course_teacher`
ON courses.id = course_teacher.teacher_id
INNER JOIN `teachers`
ON course_teacher.teacher_id = teachers.id;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT DISTINCT teachers.*, departments.id AS 'Dipartimento di Matematica'
FROM `teachers`
INNER JOIN course_teacher
ON teachers.id = course_teacher.teacher_id
INNER JOIN `courses`
ON  course_teacher.course_id = courses.id
INNER JOIN `degrees`
ON courses.degree_id = degrees.id
INNER JOIN `departments`
ON degrees.department_id = departments.id
WHERE departments.id = 5;

7. BONUS: 
  Selezionare per ogni studente :
  - il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo.
   Successivamente, filtrare i tentativi con voto minimo 18. 

   SELECT students.name, students.surname, COUNT(courses.id) AS 'Tentativi', courses.name AS 'Nome corso' , MAX(exam_student.vote) AS 'Voto massimo'
  FROM `students`
  INNER JOIN exam_student
  ON exam_student.student_id = students.id
  INNER JOIN exams
  ON exam_student.exam_id = exams.id
  INNER JOIN courses
  on exams.course_id = courses.id
  GROUP BY students.id , exams.course_id
  ORDER BY students.surname , students.name;